// <auto-generated />
using DistribuidoraProdutos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DistribuidoraProdutos.Migrations
{
    [DbContext(typeof(DistribuidoraDBContext))]
    partial class DistribuidoraDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("DistribuidoraProdutos.Models.Cliente", b =>
                {
                    b.Property<int>("Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CartaoCredito")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf_cgc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeContato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Matricula");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Fatura", b =>
                {
                    b.Property<int>("NumeroFatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FornecedorMatricula")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequisicaoNumero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("NumeroFatura");

                    b.HasIndex("FornecedorMatricula");

                    b.HasIndex("RequisicaoNumero");

                    b.ToTable("Fatura");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Fornecedor", b =>
                {
                    b.Property<int>("Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cgc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Matricula");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoNumero")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoCodigo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Quantidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SituacaoItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PedidoNumero");

                    b.HasIndex("ProdutoCodigo");

                    b.ToTable("ItemPedidos");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.ItemRequisicao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoCodigo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequisicaoNumero")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorUltimoFornecimento")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoCodigo");

                    b.HasIndex("RequisicaoNumero");

                    b.ToTable("ItemRequisicao");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Pedido", b =>
                {
                    b.Property<int>("NumSequencial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteMatricula")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NumSequencial");

                    b.HasIndex("ClienteMatricula");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Produto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.ProdutoFornecedor", b =>
                {
                    b.Property<int>("ProdutoCodigo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FornecedorMatricula")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdutoCodigo");

                    b.HasIndex("FornecedorMatricula");

                    b.ToTable("ProdutoFornecedor");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Requisicao", b =>
                {
                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FornecedorMatricula")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Numero");

                    b.HasIndex("FornecedorMatricula");

                    b.ToTable("Requisicao");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Fatura", b =>
                {
                    b.HasOne("DistribuidoraProdutos.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistribuidoraProdutos.Models.Requisicao", "Requisicao")
                        .WithMany()
                        .HasForeignKey("RequisicaoNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Requisicao");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.ItemPedido", b =>
                {
                    b.HasOne("DistribuidoraProdutos.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistribuidoraProdutos.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.ItemRequisicao", b =>
                {
                    b.HasOne("DistribuidoraProdutos.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistribuidoraProdutos.Models.Requisicao", "Requisicao")
                        .WithMany()
                        .HasForeignKey("RequisicaoNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Requisicao");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Pedido", b =>
                {
                    b.HasOne("DistribuidoraProdutos.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.ProdutoFornecedor", b =>
                {
                    b.HasOne("DistribuidoraProdutos.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DistribuidoraProdutos.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("DistribuidoraProdutos.Models.Requisicao", b =>
                {
                    b.HasOne("DistribuidoraProdutos.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });
#pragma warning restore 612, 618
        }
    }
}
